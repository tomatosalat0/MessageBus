[*.cs]

# IDE0057: Use range operator
csharp_style_prefer_range_operator = false

# IDE0066: Convert switch statement to expression
csharp_style_prefer_switch_expression = false

# SA1208: System using directives should be placed before other using directives
dotnet_diagnostic.SA1208.severity = error

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = error

# IDE0090: Use 'new(...)'
csharp_style_implicit_object_creation_when_type_is_apparent = false

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = silent

# SA1507: Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = error

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = error

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = none

# CA1051: Do not declare visible instance fields
dotnet_code_quality.ca1051.exclude_structs = true

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = silent

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

# SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = none

# IDE0024: Use block body for operators
dotnet_diagnostic.IDE0024.severity = none

# SA1513: Closing brace should be followed by blank line
dotnet_diagnostic.SA1513.severity = none

# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = none

# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = none

# SA1623: Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = silent

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = none

# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = none

# SA1214: Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1214.severity = none

# SA1111: Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1111.severity = none

# SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = none

# SA1400: Access modifier should be declared
dotnet_diagnostic.SA1400.severity = error

# SA1408: Conditional expressions should declare precedence
dotnet_diagnostic.SA1408.severity = error

# SA1606: Element documentation should have summary text
dotnet_diagnostic.SA1606.severity = error

# SA1310: Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = none

# SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = none

# SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = none

# SA1127: Generic type constraints should be on their own line
dotnet_diagnostic.SA1127.severity = none

# SA1128: Put constructor initializers on their own line
dotnet_diagnostic.SA1128.severity = none

# SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = silent

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = none

# SA1642: Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = none

# CS0419: Ambiguous reference in cref attribute
dotnet_diagnostic.CS0419.severity = none

# SA1203: Constants should appear before fields
dotnet_diagnostic.SA1203.severity = none

# SA1500: Braces for multi-line statements should not share line
dotnet_diagnostic.SA1500.severity = none

# SA1504: All accessors should be single-line or multi-line
dotnet_diagnostic.SA1504.severity = none

# SA1407: Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1407.severity = silent

# SA1129: Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = none

# SA1502: Element should not be on a single line
dotnet_diagnostic.SA1502.severity = none

# SA1114: Parameter list should follow declaration
dotnet_diagnostic.SA1114.severity = none

# CS1584: XML comment has syntactically incorrect cref attribute
dotnet_diagnostic.CS1584.severity = none

# SA1520: Use braces consistently
dotnet_diagnostic.SA1520.severity = none

# CS1658: Warning is overriding an error
dotnet_diagnostic.CS1658.severity = none

# SA1401: Fields should be private
dotnet_diagnostic.SA1401.severity = silent

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = warning

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = warning

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning

# CA2213: Dispose IDisposable members
dotnet_diagnostic.CA2213.severity=warning

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = none

# CA1019:  Define accessors for attribute arguments
dotnet_diagnostic.CA1030.severity = silent

# CA2007: Do not directly await a Task
dotnet_diagnostic.CA2007.severity = silent

# CA1305: Use IFormatProvider
dotnet_diagnostic.CA1305.severity=warning 

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity=warning 

# CA1829: Use the "Count" property instead of Enumerable.Count()
dotnet_diagnostic.CA1829.severity=warning 

# CA1001: Types that own IDisposable fields should be disposable
dotnet_diagnostic.CA1001.severity=warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity=warning

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity=warning

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity=warning

# CA1416: Validate platform compatibility

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity=warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity=warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity=warning 

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity=warning

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity=warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity=warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity=warning

# CS1572: XML comment has a param tag, but there is no parameter by that name
dotnet_diagnostic.CS1572.severity = warning

# CS1574: XML comment has cref attribute that could not be resolved
dotnet_diagnostic.CS1574.severity = warning

# CS1570: XML comment has badly formed XML
dotnet_diagnostic.CS1570.severity = warning

# CS1723: XML comment has cref attribute that refers to a type parameter
dotnet_diagnostic.CS1723.severity = warning

# SA1005: Single line comment should begin with a space
dotnet_diagnostic.SA1005.severity = warning

# SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = warning

# SA1307: Accessible fields should begin with upper-case letter
dotnet_diagnostic.SA1307.severity = warning

# SA1100: Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1100.severity = warning

# SA1107: Code should not contain multiple statements on one line
dotnet_diagnostic.SA1107.severity = warning

# SA1512: Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = warning

# SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = warning

# SA1108: Block statements should not contain embedded comments
dotnet_diagnostic.SA1108.severity = warning

# SA1400: Access modifier should be declared
dotnet_diagnostic.SA1400.severity = warning

# SA1404: Code analysis suppression should have justification
dotnet_diagnostic.SA1404.severity = warning

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = warning

# SA1312: Variable names should begin with lower-case letter
dotnet_diagnostic.SA1312.severity = warning

# SA1314: Type parameter names should begin with T
dotnet_diagnostic.SA1314.severity = warning

# SA1313: Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = warning

# SA1316: Tuple element names should use correct casing
dotnet_diagnostic.SA1316.severity = warning

# SA1136: Enum values should be on separate lines
dotnet_diagnostic.SA1136.severity = warning

# SA1027: Use tabs correctly
dotnet_diagnostic.SA1027.severity = warning

# SA1121: Use built-in type
dotnet_diagnostic.SA1121.severity = warning

# SA1123: Do not place regions within elements
dotnet_diagnostic.SA1123.severity = warning 

# SA1124: Do not use regions
dotnet_diagnostic.SA1124.severity = warning 

# SA1131: Use readable conditions
dotnet_diagnostic.SA1131.severity = warning 

# SA1133: Each attribute should be placed in its own set of square brackets
dotnet_diagnostic.SA1133.severity = warning

# SA1135: Using directive should be qualified
dotnet_diagnostic.SA1135.severity = warning

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = warning

# SA1519: Braces should not be omitted from multi-line child statement
dotnet_diagnostic.SA1519.severity = warning

# SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity=warning

# SA1405: Debug.Assert should provide message text
dotnet_diagnostic.SA1405.severity = warning

# SA1651: Do not use placeholder elements
dotnet_diagnostic.SA1651.severity = warning

# SA1612: Element parameter documentation should match element parameters
dotnet_diagnostic.SA1612.severity = warning

# SA1004: Documentation lines should begin with single space
dotnet_diagnostic.SA1004.severity = warning

# CA1067: Override Equals when implementing IEquatable
dotnet_diagnostic.CA1067.severity = warning

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = warning

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = warning

# CA1012: Abstract types should not have constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = error

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = warning

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = warning

# CA1028: Enum storage should be Int32
dotnet_diagnostic.CA1028.severity = warning

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = warning

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = warning

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = warning

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# CA1043: Use integral or string argument for indexers
dotnet_diagnostic.CA1043.severity = warning

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = warning

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = warning

# CA1046: Do not overload operator equals on reference types
dotnet_diagnostic.CA1046.severity = warning

# CA1047: Do not declare protected members in sealed types
dotnet_diagnostic.CA1047.severity = warning

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = warning

# SA1520: Use braces consistently
dotnet_diagnostic.SA1520.severity = warning

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = warning

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning

# CA1052: Static holder types should be sealed
dotnet_diagnostic.CA1052.severity = warning

# CA1053: Static holder types should not have constructors
dotnet_diagnostic.CA1053.severity = warning

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = warning

# CA1060: Move P/Invokes to NativeMethods class
dotnet_diagnostic.CA1060.severity = warning

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# CA1063: Implement IDisposable correctly
dotnet_diagnostic.CA1063.severity = warning

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning

# CA1066: Implement IEquatable when overriding Equals
dotnet_diagnostic.CA1066.severity = warning

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = warning

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostric.CA1303.severity = warning

# CA1307: Specify StringComparison for clarity
dotnet_diagnostric.CA1307.severity = warning

# CA1308: Normalize strings to uppercase
dotnet_diagnostric.CA1308.severity = warning

# CA1309: Use ordinal StringComparison
dotnet_diagnostric.CA1309.severity = warning

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = warning

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# CA1821: Remove empty finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# CA1828: Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1832.severity = warning

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1833.severity = warning

# CA1834: Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# CA1836: Prefer IsEmpty over Count when available
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.CA1837.severity = warning

# CA1838: Avoid StringBuilder parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1839: Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName
dotnet_diagnostic.CA1839.severity = warning

# CA1840: Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.CA1840.severity = warning

# CA1841: Prefer Dictionary Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = warning

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = warning

# CA1850: Prefer static HashData method over ComputeHash
dotnet_diagnostic.CA1850.severity = warning

# CA1851: Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.CA1851.severity = warning

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Do not assign property within its setter
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops.
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# CA2018: The count argument to Buffer.BlockCopy should specify the number of bytes to copy
dotnet_diagnostic.CA2018.severity = warning

dotnet_diagnostic.SA1403.severity=warning
dotnet_diagnostic.CA1018.severity=warning
dotnet_diagnostic.CA1050.severity=warning

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

# IDE0017: Simplify object initialization
dotnet_style_object_initializer = false